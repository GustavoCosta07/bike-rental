services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: bikeuser
      POSTGRES_PASSWORD: bikepassword
      POSTGRES_DB: bikerental
      TZ: America/Sao_Paulo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bikeuser -d bikerental"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "timezone=America/Sao_Paulo"

  sns:
    image: localstack/localstack:3.4.0
    environment:
      - SERVICES=sqs,sns
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - EDGE_PORT=4566
      - LOCALSTACK_HOST=0.0.0.0
      - DEBUG=1
      - LS_LOG=debug
      - PERSISTENCE=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LEGACY_SQS_PROVIDER=0
      - PERSIST_ALL=false
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    volumes:
      - "${TEMPDIR:-/tmp/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  api:
    image: ${DOCKER_REGISTRY-}bikerentalapi
    build:
      context: .
      dockerfile: BikeRental.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=bikerental;Username=bikeuser;Password=bikepassword;Pooling=true;
      - AWS__ServiceURL=http://sns:4566
      - MassTransit__AmazonSqs__ServiceUrl=http://sns:4566
    ports:
      - "8080:8080"
    depends_on:
      - db
      - sns
    volumes:
      - ./BikeRental.Api/Storage:/app/Storage

  tests:
    image: ${DOCKER_REGISTRY-}bikerentaltests
    build:
      context: .
      dockerfile: BikeRental.Tests/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=bikerental;Username=bikeuser;Password=bikepassword;Pooling=true;
      - AWS__ServiceURL=http://sns:4566
      - MassTransit__AmazonSqs__ServiceUrl=http://sns:4566
    depends_on:
      db:
        condition: service_healthy
      sns:
        condition: service_started

volumes:
  postgres_data:
